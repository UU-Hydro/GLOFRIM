[globalOptions]

# Set the input directory map in an absolute path.
# - The input forcing and parameter directories will be relative to this.
inputDir = /home/dirk/experiments/model_test_data/test_Elbe/PCR_Elbe/input30min/

# Map of clone (must be provided in PCRaster maps)
# - Spatial resolution and coverage are based on this map:
cloneMap = clone_elbe_30min.map

# The area/landmask of interest:
#landmask = landmask_elbe_30min.map
landmask = None
# If None, area/landmask is limited for cells with ldd value.

# Set the output directory in an absolute path.
outputDir = /home/dirk/experiments/glofrim/test_Elbe/PCR

# netcdf attributes for output files:
institution = Department of Physical Geography, Utrecht University
title       = PCR-GLOBWB output
description = test version by Edwin H. Sutanudjaja; adapted by J. Hoch 

startTime = 2000-01-01
endTime   = 2001-12-31
# Format: YYYY-MM-DD
# The model runs on the daily time step.

# spinning up options
maxSpinUpsInYears = 1
minConvForTotlSto = 0.5
minConvForSoilSto = 0.5
minConvForGwatSto = 0.5
minConvForChanSto = 0.5

# 2-way coupling control
ActivateCoupling = False
ActivateFactorInfiltrationFloodplain = False
ActivateZeroInfiltrationFloodplain = False

[prefactorOptions]

linear_multiplier_for_refPotET         = 1.0
linear_multiplier_for_degreeDayFactor  = 1.0
linear_multiplier_for_minSoilDepthFrac = 1.0
log_10_multiplier_for_kSat             = 0.0
linear_multiplier_for_storCap          = 1.25
log_10_multiplier_for_recessionCoeff   = 1.0

[meteoOptions]

# Set the forcing temperature and precipitation files (relative to inputDir)
precipitationNC = ../forcing/CRU-TS3.21_ERA-40_ERA-Interim_daily_precipitation_2000.nc
temperatureNC   = ../forcing/CRU-TS3.21_ERA-40_ERA-Interim_daily_temperature_2000.nc

# Method to calculate referencePotETP (reference potential evaporation+transpiration)
referenceETPotMethod = Input
# options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
refETPotFileNC  = ../forcing/CRU-TS3.21_ERA-40_ERA-Interim_daily_referencePotET_2000.nc


[landSurfaceOptions]
debugWaterBalance = True

numberOfUpperSoilLayers = 2

topographyNC      = PCRGLOBWB20/input30min/landSurface/topo/topoProperties.nc
soilPropertiesNC  = PCRGLOBWB20/input30min/landSurface/soil/soilProperties.nc

includeIrrigation = True
# if True, there are four land cover types defined: forest,grassland,irrPaddy,irrNonPaddy
# if False, two (natural) land cover types defined: forest,grassland

# netcdf time series for historical expansion of irrigation areas (unit: hectares).
# Note: The resolution of this map must be consisten with the resolution of cellArea.
#~ historicalIrrigationArea = None
historicalIrrigationArea = PCRGLOBWB20/input30min/landSurface/waterDemand/irrigated_areas/irrigationArea30ArcMin.nc

includeDomesticWaterDemand = True
includeIndustryWaterDemand = True

domesticWaterDemandFile = PCRGLOBWB20/input30min/landSurface/waterDemand/domesticWaterDemand30ArcMin.nc
industryWaterDemandFile = PCRGLOBWB20/input30min/landSurface/waterDemand/industryWaterDemand30ArcMin.nc

limitAbstraction = False

# zone IDs (scale) at which ground- surface-water allocation is performed
allocationSegmentsForGroundSurfaceWater = None
#~ allocationSegmentsForGroundSurfaceWater = others/irrigationZones/one_arc_degree/uniqueIds60min.nom.map

[forestOptions]
name = forest
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002

landCoverMapsNC  = PCRGLOBWB20/input30min/landCover/forest/forestProperties.nc
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

cropCoefficientNC = PCRGLOBWB20/input30min/landCover/forest/Global_CropCoefficientKc-Forest_30min.nc
interceptCapNC    = PCRGLOBWB20/input30min/landCover/forest/interceptCapInputForest366days.nc
coverFractionNC   = PCRGLOBWB20/input30min/landCover/forest/coverFractionInputForest366days.nc

# initial conditions:
interceptStorIni = Elbe_IC_1999_30min/IC_Elbe_industrial/states/interceptStor_forest_1999-12-31.map
snowCoverSWEIni  = Elbe_IC_1999_30min/IC_Elbe_industrial/states/snowCoverSWE_forest_1999-12-31.map
snowFreeWaterIni = Elbe_IC_1999_30min/IC_Elbe_industrial/states/snowFreeWater_forest_1999-12-31.map
topWaterLayerIni = Elbe_IC_1999_30min/IC_Elbe_industrial/states/topWaterLayer_forest_1999-12-31.map
storUppIni       = Elbe_IC_1999_30min/IC_Elbe_industrial/states/storUpp_forest_1999-12-31.map
storLowIni       = Elbe_IC_1999_30min/IC_Elbe_industrial/states/storLow_forest_1999-12-31.map
interflowIni     = Elbe_IC_1999_30min/IC_Elbe_industrial/states/interflow_forest_1999-12-31.map

[grasslandOptions]
name = grassland
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002

landCoverMapsNC  = PCRGLOBWB20/input30min/landCover/grassland/grasslandProperties.nc
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

cropCoefficientNC = PCRGLOBWB20/input30min/landCover/grassland/Global_CropCoefficientKc-Grassland_30min.nc
interceptCapNC    = PCRGLOBWB20/input30min/landCover/grassland/interceptCapInputGrassland366days.nc
coverFractionNC   = PCRGLOBWB20/input30min/landCover/grassland/coverFractionInputGrassland366days.nc

# initial conditions:
interceptStorIni = Elbe_IC_1999_30min/IC_Elbe_industrial/states/interceptStor_grassland_1999-12-31.map
snowCoverSWEIni  = Elbe_IC_1999_30min/IC_Elbe_industrial/states/snowCoverSWE_grassland_1999-12-31.map
snowFreeWaterIni = Elbe_IC_1999_30min/IC_Elbe_industrial/states/snowFreeWater_grassland_1999-12-31.map
topWaterLayerIni = Elbe_IC_1999_30min/IC_Elbe_industrial/states/topWaterLayer_grassland_1999-12-31.map
storUppIni       = Elbe_IC_1999_30min/IC_Elbe_industrial/states/storUpp_grassland_1999-12-31.map
storLowIni       = Elbe_IC_1999_30min/IC_Elbe_industrial/states/storLow_grassland_1999-12-31.map
interflowIni     = Elbe_IC_1999_30min/IC_Elbe_industrial/states/interflow_grassland_1999-12-31.map

[irrPaddyOptions]
name = irrPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = PCRGLOBWB20/input30min/landCover/irrPaddy/paddyProperties.nc
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.05
minCropKC        = 0.2
minInterceptCap  = 0.0002
cropDeplFactor   = 0.2

cropCoefficientNC = PCRGLOBWB20/input30min/landCover/irrPaddy/Global_CropCoefficientKc-IrrPaddy_30min.nc

# initial conditions:
interceptStorIni = Elbe_IC_1999_30min/IC_Elbe_industrial/states/interceptStor_irrPaddy_1999-12-31.map
snowCoverSWEIni  = Elbe_IC_1999_30min/IC_Elbe_industrial/states/snowCoverSWE_irrPaddy_1999-12-31.map
snowFreeWaterIni = Elbe_IC_1999_30min/IC_Elbe_industrial/states/snowFreeWater_irrPaddy_1999-12-31.map
topWaterLayerIni = Elbe_IC_1999_30min/IC_Elbe_industrial/states/topWaterLayer_irrPaddy_1999-12-31.map
storUppIni       = Elbe_IC_1999_30min/IC_Elbe_industrial/states/storUpp_irrPaddy_1999-12-31.map
storLowIni       = Elbe_IC_1999_30min/IC_Elbe_industrial/states/storLow_irrPaddy_1999-12-31.map
interflowIni     = Elbe_IC_1999_30min/IC_Elbe_industrial/states/interflow_irrPaddy_1999-12-31.map

[irrNonPaddyOptions]
name = irrNonPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = PCRGLOBWB20/input30min/landCover/irrNonPaddy/nonPaddyProperties.nc
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002
cropDeplFactor   = 0.5

cropCoefficientNC = PCRGLOBWB20/input30min/landCover/irrNonPaddy/Global_CropCoefficientKc-IrrNonPaddy_30min.nc

# initial conditions:
interceptStorIni = Elbe_IC_1999_30min/IC_Elbe_industrial/states/interceptStor_irrNonPaddy_1999-12-31.map
snowCoverSWEIni  = Elbe_IC_1999_30min/IC_Elbe_industrial/states/snowCoverSWE_irrNonPaddy_1999-12-31.map
snowFreeWaterIni = Elbe_IC_1999_30min/IC_Elbe_industrial/states/snowFreeWater_irrNonPaddy_1999-12-31.map
topWaterLayerIni = Elbe_IC_1999_30min/IC_Elbe_industrial/states/topWaterLayer_irrNonPaddy_1999-12-31.map
storUppIni       = Elbe_IC_1999_30min/IC_Elbe_industrial/states/storUpp_irrNonPaddy_1999-12-31.map
storLowIni       = Elbe_IC_1999_30min/IC_Elbe_industrial/states/storLow_irrNonPaddy_1999-12-31.map
interflowIni     = Elbe_IC_1999_30min/IC_Elbe_industrial/states/interflow_irrNonPaddy_1999-12-31.map

[groundwaterOptions]
debugWaterBalance = True

groundwaterPropertiesNC = PCRGLOBWB20/input30min/groundwater/groundwaterProperties.nc

# minimum value for groundwater recession coefficient (day-1)
minRecessionCoeff = 2.5e-4

# initial condition:
storGroundwaterIni = Elbe_IC_1999_30min/IC_Elbe_industrial/states/storGroundwater_1999-12-31.map
storGroundwaterFossilIni = Elbe_IC_1999_30min/IC_Elbe_industrial/states/storGroundwaterFossil_1999-12-31.map
avgTotalGroundwaterAbstractionIni = Elbe_IC_1999_30min/IC_Elbe_industrial/states/avgTotalGroundwaterAbstractionIni_1999-12-31.map

[routingOptions]
debugWaterBalance = True

lddMap      = ldd_elbe_30min.map
cellAreaMap = PCRGLOBWB20/input30min/routing/cellarea30min.map
gradient    = PCRGLOBWB20/input30min/routing/Global_ChannelGradient-RVB_30min.map

# manning coefficient
manningsN   = 0.04

# constant channel width (optional)
constantChannelWidth = None

# minimum channel width (optional)
minimumChannelWidth  = None

routingMethod = kinematicWave
# Options are kinematicWave, simplifiedKinematicWave and accuTravelTime

# option for maximum length of a sub time step in seconds (optional and only used if kinematicWave is used)
# - Note that too long sub time step may create water balance errors.
# - Default values: 3600 seconds for 30 arcmin ; 720 seconds for 5 arcmin
#~maxiumLengthOfSubTimeStep = 3600.
#~ maxiumLengthOfSubTimeStep = 720.

# lake and reservoir parameters
waterBodyInputNC = PCRGLOBWB20/input30min/routing/reservoirs/fromRensJune2013/reservoirparameterization/waterBodies30min.nc
onlyNaturalWaterBodies = False

# composite crop factors for WaterBodies:
cropCoefficientWaterNC = PCRGLOBWB20/input30min/routing/cropCoefficientForOpenWater.nc
minCropWaterKC         = 0.20

# number of days (timesteps) that have been performed for spinning up initial conditions in the routing module (i.e. channelStorageIni, avgDischargeLongIni, avgDischargeShortIni, etc.)
timestepsToAvgDischargeIni     = 0.0
# Note that:
# - maximum number of days (timesteps) to calculate long term average flow values (default: 5 years = 5 * 365 days = 1825)
# - maximum number of days (timesteps) to calculate short term average values (default: 1 month = 1 * 30 days = 30)

# initial conditions:
waterBodyStorageIni            = Elbe_IC_1999_30min/IC_Elbe_industrial/states/waterBodyStorage_1999-12-31.map
channelStorageIni              = Elbe_IC_1999_30min/IC_Elbe_industrial/states/channelStorage_1999-12-31.map
readAvlChannelStorageIni       = Elbe_IC_1999_30min/IC_Elbe_industrial/states/readAvlChannelStorage_1999-12-31.map
avgDischargeLongIni            = Elbe_IC_1999_30min/IC_Elbe_industrial/states/avgDischargeLong_1999-12-31.map
m2tDischargeLongIni            = Elbe_IC_1999_30min/IC_Elbe_industrial/states//m2tDischargeLong_1999-12-31.map
avgBaseflowLongIni             = Elbe_IC_1999_30min/IC_Elbe_industrial/states/avgBaseflowLong_1999-12-31.map
riverbedExchangeIni            = Elbe_IC_1999_30min/IC_Elbe_industrial/states/riverbedExchange_1999-12-31.map
avgLakeReservoirInflowShortIni = Elbe_IC_1999_30min/IC_Elbe_industrial/states/avgLakeReservoirInflowShort_1999-12-31.map
avgLakeReservoirOutflowLongIni = Elbe_IC_1999_30min/IC_Elbe_industrial/states/avgLakeReservoirOutflowLong_1999-12-31.map

#
# other initial conditions (optional):
avgDischargeShortIni           = Elbe_IC_1999_30min/IC_Elbe_industrial/states//subDischarge_1999-12-31.map

[reportingOptions]

# output files that will be written in the disk in netcdf files:
outDailyTotNC = discharge,runoff
outMonthTotNC = None
outMonthAvgNC = None
outMonthEndNC = None
outAnnuaTotNC = None
outAnnuaAvgNC = None
outAnnuaEndNC = None
